#nullable enable
#pragma warning disable CS1591

{{~ if attribute_settings.generate_match ~}}
using System;
{{~ end ~}}
{{~ if attribute_settings.generate_polymorphic_serialization ~}}
using System.Text.Json.Serialization;
{{~ end ~}}

namespace {{ namespace }} 
{
    {{~ if attribute_settings.generate_polymorphic_serialization ~}}
    {{~ for member in members ~}}
    {{~ if member.should_generate_serializer_attribute ~}}
    [JsonDerivedType(typeof({{ member.name.plain }}))]
    {{~ end ~}}
    {{~ end ~}}
    {{~ end ~}}
    partial {{ string.downcase type }} {{ name.with_generics }}
    {
        {{~ if attribute_settings.generate_private_constructor ~}}
        private {{ name.plain }}() { }

        {{~ end ~}}
        {{~ if attribute_settings.match_on == "Type" ~}}
        public TResult Match<TResult>(
            {{~ for member in members ~}}
            Func<{{ member.name.with_generics }}, TResult> on{{ member.name.plain }}{{ if !for.last }},{{ end }}
            {{~ end ~}}
        ) => 
            this switch
            {
                {{~ for member in members ~}}
                {{ member.name.with_generics }} value => on{{ member.name.plain }}(value),
                {{~ end ~}}
                _ => throw new InvalidOperationException($"Type '{this.GetType()}' was not a known variant of the discriminated union '{{ name.with_generics }}' and was unhandled")
            };

        {{~ else if attribute_settings.match_on == "Properties" ~}}
        public TResult Match<TResult>(
            {{~ for member in members ~}}
            {{~ if member.matchable_properties.size > 0 ~}}
            Func<{{~ for prop in member.matchable_properties ~}}{{ prop.type.with_generics }}, {{~ end ~}}TResult> on{{ member.name.plain }}{{ if !for.last }},{{ end }}
            {{~ else ~}}
            Func<TResult> on{{ member.name.plain }}{{ if !for.last }},{{ end }}
            {{~ end ~}}
            {{~ end ~}}
        ) => 
            this switch
            {
                {{~ for member in members ~}}
                {{~ if member.matchable_properties.size > 0 ~}}
                {{ member.name.with_generics }} value => on{{ member.name.plain }}({{~ for prop in member.matchable_properties ~}}value.{{ prop.name }}{{ if !for.last }}, {{ end }}{{~ end ~}}),
                {{~ else ~}}
                {{ member.name.with_generics }} value => on{{ member.name.plain }}(),
                {{~ end ~}}
                {{~ end ~}}
                _ => throw new InvalidOperationException($"Type '{this.GetType()}' was not a known variant of the discriminated union '{{ name.with_generics }}' and was unhandled.")
            };

        {{~ end ~}}
    }
}